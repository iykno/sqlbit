<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iykno.sqlbit.dynamic.mapper.ColumnConfigMapper">
  <resultMap id="BaseResultMap" type="com.iykno.sqlbit.dynamic.model.ColumnConfig">
    <id column="columnConfigId" jdbcType="INTEGER" property="columnConfigId" />
    <result column="configId" jdbcType="INTEGER" property="configId" />
    <result column="columnName" jdbcType="VARCHAR" property="columnName" />
    <result column="columnNameCN" jdbcType="VARCHAR" property="columnNameCN" />
    <result column="columnLength" jdbcType="INTEGER" property="columnLength" />
    <result column="columnType" jdbcType="INTEGER" property="columnType" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateBy" jdbcType="VARCHAR" property="updateBy" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="mark" jdbcType="INTEGER" property="mark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    columnConfigId, configId, columnName, columnNameCN, columnLength, columnType, createBy, 
    createTime, updateBy, updateTime, description, mark
  </sql>
  <select id="selectByExample" parameterType="com.iykno.sqlbit.dynamic.model.ColumnConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_column_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_column_config
    where columnConfigId = #{columnConfigId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_column_config
    where columnConfigId = #{columnConfigId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.iykno.sqlbit.dynamic.model.ColumnConfigExample">
    delete from tb_column_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iykno.sqlbit.dynamic.model.ColumnConfig">
    insert into tb_column_config (columnConfigId, configId, columnName, 
      columnNameCN, columnLength, columnType, 
      createBy, createTime, updateBy, 
      updateTime, description, mark
      )
    values (#{columnConfigId,jdbcType=INTEGER}, #{configId,jdbcType=INTEGER}, #{columnName,jdbcType=VARCHAR}, 
      #{columnNameCN,jdbcType=VARCHAR}, #{columnLength,jdbcType=INTEGER}, #{columnType,jdbcType=INTEGER}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{mark,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iykno.sqlbit.dynamic.model.ColumnConfig">
    insert into tb_column_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="columnConfigId != null">
        columnConfigId,
      </if>
      <if test="configId != null">
        configId,
      </if>
      <if test="columnName != null">
        columnName,
      </if>
      <if test="columnNameCN != null">
        columnNameCN,
      </if>
      <if test="columnLength != null">
        columnLength,
      </if>
      <if test="columnType != null">
        columnType,
      </if>
      <if test="createBy != null">
        createBy,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="mark != null">
        mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="columnConfigId != null">
        #{columnConfigId,jdbcType=INTEGER},
      </if>
      <if test="configId != null">
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="columnName != null">
        #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnNameCN != null">
        #{columnNameCN,jdbcType=VARCHAR},
      </if>
      <if test="columnLength != null">
        #{columnLength,jdbcType=INTEGER},
      </if>
      <if test="columnType != null">
        #{columnType,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iykno.sqlbit.dynamic.model.ColumnConfigExample" resultType="java.lang.Long">
    select count(*) from tb_column_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_column_config
    <set>
      <if test="record.columnConfigId != null">
        columnConfigId = #{record.columnConfigId,jdbcType=INTEGER},
      </if>
      <if test="record.configId != null">
        configId = #{record.configId,jdbcType=INTEGER},
      </if>
      <if test="record.columnName != null">
        columnName = #{record.columnName,jdbcType=VARCHAR},
      </if>
      <if test="record.columnNameCN != null">
        columnNameCN = #{record.columnNameCN,jdbcType=VARCHAR},
      </if>
      <if test="record.columnLength != null">
        columnLength = #{record.columnLength,jdbcType=INTEGER},
      </if>
      <if test="record.columnType != null">
        columnType = #{record.columnType,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        createBy = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        updateBy = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_column_config
    set columnConfigId = #{record.columnConfigId,jdbcType=INTEGER},
      configId = #{record.configId,jdbcType=INTEGER},
      columnName = #{record.columnName,jdbcType=VARCHAR},
      columnNameCN = #{record.columnNameCN,jdbcType=VARCHAR},
      columnLength = #{record.columnLength,jdbcType=INTEGER},
      columnType = #{record.columnType,jdbcType=INTEGER},
      createBy = #{record.createBy,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateBy = #{record.updateBy,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iykno.sqlbit.dynamic.model.ColumnConfig">
    update tb_column_config
    <set>
      <if test="configId != null">
        configId = #{configId,jdbcType=INTEGER},
      </if>
      <if test="columnName != null">
        columnName = #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="columnNameCN != null">
        columnNameCN = #{columnNameCN,jdbcType=VARCHAR},
      </if>
      <if test="columnLength != null">
        columnLength = #{columnLength,jdbcType=INTEGER},
      </if>
      <if test="columnType != null">
        columnType = #{columnType,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=INTEGER},
      </if>
    </set>
    where columnConfigId = #{columnConfigId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iykno.sqlbit.dynamic.model.ColumnConfig">
    update tb_column_config
    set configId = #{configId,jdbcType=INTEGER},
      columnName = #{columnName,jdbcType=VARCHAR},
      columnNameCN = #{columnNameCN,jdbcType=VARCHAR},
      columnLength = #{columnLength,jdbcType=INTEGER},
      columnType = #{columnType,jdbcType=INTEGER},
      createBy = #{createBy,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=INTEGER}
    where columnConfigId = #{columnConfigId,jdbcType=INTEGER}
  </update>
</mapper>